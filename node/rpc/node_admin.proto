syntax = "proto3";
package NODEADMIN;

import "node/api.proto";

service NodeAdmin {
  rpc GetPeers(GetPeersRequest) returns (GetPeersResponse);
  rpc GetVersion(Empty) returns (GetVersionResponse);
  rpc UpgradeNode(UpgradeNodeRequest) returns (UpgradeNodeResponse);
  rpc GetPendingBlocks(GetPendingBlocksRequest) returns (GetPendingBlocksReply);
  rpc GetBlockPoolSize(Empty) returns (GetBlockPoolSizeReply);
  rpc GetNodeStatus(GetNodeStatusRequest) returns (GetNodeStatusReply);
  rpc GetMode(GetModeRequest) returns (GetModeReply);
  rpc SetMode(SetModeRequest) returns (SetModeReply);
  rpc GetNodeName(Empty) returns (GetNodeNameReply);
  rpc SetNodeName(SetNodeNameRequest) returns (Empty);
  rpc GetChain(GetChainRequest) returns (GetChainReply);
  rpc GetLogs(GetLogsRequest) returns (GetLogsReply);
}

message GetPeersRequest {}
message GetPeersResponse {}

message GetVersionResponse { string version = 1; }

message UpgradeNodeRequest {}
message UpgradeNodeResponse {}

message GetPendingBlocksRequest {}
message GetPendingBlocksReply { repeated API.Block blocks = 1; }

message GetBlockPoolSizeReply { uint64 length = 1; }

message GetNodeStatusRequest {}
message GetNodeStatusReply {}

message GetModeRequest {}
message GetModeReply {}

message SetModeRequest {}
message SetModeReply {}

message GetNodeNameReply { string name = 1; }

message SetNodeNameRequest { string new_name = 1; }

message GetChainRequest {}
message GetChainReply {}

message GetLogsRequest {}
message GetLogsReply {}

message Empty {}
