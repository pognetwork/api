syntax = "proto3";
package NODEWALLETMANAGER;

import "node/api.proto";

service NodeWalletManager {
  rpc GetWallets(Empty) returns (GetWalletsReply);
  rpc GetWallet(GetWalletRequest) returns (GetWalletReply);
  rpc AddWallet(AddWalletRequest) returns (AddWalletReply);
  rpc RemoveWallet(RemoveWalletRequest) returns (Empty);
  rpc SignMessage(SignMessageRequest) returns (SignMessageReply);
  rpc SignBlock(SignBlockRequest) returns (SignBlockReply);
  rpc VerifySignature(VerifySignatureRequest) returns (Empty);
  rpc EncryptMessage(EncryptMessageRequest) returns (EncryptMessageReply);
  rpc DecryptMessage(DecryptMessageRequest) returns (DecryptMessageReply);
}

message GetWalletsReply {};

message GetWalletRequest { bytes address = 1; };
message GetWalletReply { API.Wallet wallet = 1; };

message AddWalletRequest {
  string username = 1;
  string password = 2;
};
message AddWalletReply { API.Wallet wallet = 1; };

message RemoveWalletRequest { bytes address = 1; };

message SignMessageRequest { 
  string unsigned_data = 1; 
  bytes address = 2;
};
message SignMessageReply { string signed_data = 1; };

message SignBlockRequest { 
  API.Block unsigned_block = 1; 
  bytes address = 2;
};
message SignBlockReply { API.Block signed_block = 1; };

message VerifySignatureRequest { 
  string data = 1; 
  bytes address = 2;
};

message EncryptMessageRequest { 
  string unencrypted_message = 1; 
  bytes address = 2;
};
message EncryptMessageReply { string encrypted_message = 1; };

message DecryptMessageRequest { 
  string encrypted_message = 1; 
  bytes address = 2;
};
message DecryptMessageReply { string decrypted_message = 1; };

message Empty {};
