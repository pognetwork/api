syntax = "proto3";
package PRIVATE;

import "node/api.proto";

service Private {
  rpc GetAccounts(Empty) returns (GetAccountsReply);
  rpc GetAccount(GetAccountRequest) returns (GetAccountReply);
  rpc AddAccount(AddAccountRequest) returns (AddAccountReply);
  rpc RemoveAccount(RemoveAccountRequest) returns (Empty);
  rpc SignMessage(SignMessageRequest) returns (SignMessageReply);
  rpc SignBlock(SignBlockRequest) returns (SignBlockReply);
  rpc VerifySignature(VerifySignatureRequest) returns (Empty);
  rpc EncryptMessage(EncryptMessageRequest) returns (EncryptMessageReply);
  rpc DecryptMessage(DecryptMessageRequest) returns (DecryptMessageReply);
}

message GetAccountsReply {};

message GetAccountRequest { bytes address = 1; };
message GetAccountReply { API.Account account = 1; };

message AddAccountRequest {
  string username = 1;
  string password = 2;
};
message AddAccountReply { API.Account account = 1; };

message RemoveAccountRequest { bytes address = 1; };

message SignMessageRequest { 
  string unsigned_data = 1; 
  bytes address = 2;
};
message SignMessageReply { string signed_data = 1; };

message SignBlockRequest { 
  API.Block unsigned_block = 1; 
  bytes address = 2;
};
message SignBlockReply { API.Block signed_block = 1; };

message VerifySignatureRequest { 
  string data = 1; 
  bytes address = 2;
};

message EncryptMessageRequest { 
  string unencrypted_message = 1; 
  bytes address = 2;
};
message EncryptMessageReply { string encrypted_message = 1; };

message DecryptMessageRequest { 
  string encrypted_message = 1; 
  bytes address = 2;
};
message DecryptMessageReply { string decrypted_message = 1; };

message Empty {};
