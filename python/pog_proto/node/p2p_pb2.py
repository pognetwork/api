# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: node/p2p.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from node import api_pb2 as node_dot_api__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0enode/p2p.proto\x12\x03P2P\x1a\x0enode/api.proto\"5\n\rRequestHeader\x12\x11\n\tsignature\x18\x01 \x01(\x0c\x12\x11\n\tpublicKey\x18\x05 \x01(\x0c\"\xb2\x03\n\x07Request\x12#\n\rsignatureType\x18\x01 \x01(\x0e\x32\x0c.API.SigType\x12\x11\n\ttimestamp\x18\x02 \x01(\x04\x12!\n\x04ping\x18\x04 \x01(\x0b\x32\x11.P2P.Request.PingH\x00\x12\'\n\x07\x66orward\x18\x05 \x01(\x0b\x32\x14.P2P.Request.ForwardH\x00\x12)\n\x04vote\x18\x06 \x01(\x0b\x32\x19.P2P.Request.VoteProposalH\x00\x12+\n\tfinalVote\x18\x07 \x01(\x0b\x32\x16.P2P.Request.FinalVoteH\x00\x1aS\n\x07\x46orward\x12)\n\rrequestHeader\x18\x01 \x01(\x0b\x32\x12.P2P.RequestHeader\x12\x1d\n\x07request\x18\x02 \x01(\x0b\x32\x0c.P2P.Request\x1a,\n\x0cVoteProposal\x12\x1c\n\x05\x62lock\x18\x01 \x01(\x0b\x32\r.API.RawBlock\x1a)\n\tFinalVote\x12\x1c\n\x05\x62lock\x18\x01 \x01(\x0b\x32\r.API.RawBlock\x1a\x15\n\x04Ping\x12\r\n\x05peers\x18\x01 \x03(\x0c\x42\x06\n\x04\x44\x61tab\x06proto3')



_REQUESTHEADER = DESCRIPTOR.message_types_by_name['RequestHeader']
_REQUEST = DESCRIPTOR.message_types_by_name['Request']
_REQUEST_FORWARD = _REQUEST.nested_types_by_name['Forward']
_REQUEST_VOTEPROPOSAL = _REQUEST.nested_types_by_name['VoteProposal']
_REQUEST_FINALVOTE = _REQUEST.nested_types_by_name['FinalVote']
_REQUEST_PING = _REQUEST.nested_types_by_name['Ping']
RequestHeader = _reflection.GeneratedProtocolMessageType('RequestHeader', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTHEADER,
  '__module__' : 'node.p2p_pb2'
  # @@protoc_insertion_point(class_scope:P2P.RequestHeader)
  })
_sym_db.RegisterMessage(RequestHeader)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), {

  'Forward' : _reflection.GeneratedProtocolMessageType('Forward', (_message.Message,), {
    'DESCRIPTOR' : _REQUEST_FORWARD,
    '__module__' : 'node.p2p_pb2'
    # @@protoc_insertion_point(class_scope:P2P.Request.Forward)
    })
  ,

  'VoteProposal' : _reflection.GeneratedProtocolMessageType('VoteProposal', (_message.Message,), {
    'DESCRIPTOR' : _REQUEST_VOTEPROPOSAL,
    '__module__' : 'node.p2p_pb2'
    # @@protoc_insertion_point(class_scope:P2P.Request.VoteProposal)
    })
  ,

  'FinalVote' : _reflection.GeneratedProtocolMessageType('FinalVote', (_message.Message,), {
    'DESCRIPTOR' : _REQUEST_FINALVOTE,
    '__module__' : 'node.p2p_pb2'
    # @@protoc_insertion_point(class_scope:P2P.Request.FinalVote)
    })
  ,

  'Ping' : _reflection.GeneratedProtocolMessageType('Ping', (_message.Message,), {
    'DESCRIPTOR' : _REQUEST_PING,
    '__module__' : 'node.p2p_pb2'
    # @@protoc_insertion_point(class_scope:P2P.Request.Ping)
    })
  ,
  'DESCRIPTOR' : _REQUEST,
  '__module__' : 'node.p2p_pb2'
  # @@protoc_insertion_point(class_scope:P2P.Request)
  })
_sym_db.RegisterMessage(Request)
_sym_db.RegisterMessage(Request.Forward)
_sym_db.RegisterMessage(Request.VoteProposal)
_sym_db.RegisterMessage(Request.FinalVote)
_sym_db.RegisterMessage(Request.Ping)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _REQUESTHEADER._serialized_start=39
  _REQUESTHEADER._serialized_end=92
  _REQUEST._serialized_start=95
  _REQUEST._serialized_end=529
  _REQUEST_FORWARD._serialized_start=326
  _REQUEST_FORWARD._serialized_end=409
  _REQUEST_VOTEPROPOSAL._serialized_start=411
  _REQUEST_VOTEPROPOSAL._serialized_end=455
  _REQUEST_FINALVOTE._serialized_start=457
  _REQUEST_FINALVOTE._serialized_end=498
  _REQUEST_PING._serialized_start=500
  _REQUEST_PING._serialized_end=521
# @@protoc_insertion_point(module_scope)
